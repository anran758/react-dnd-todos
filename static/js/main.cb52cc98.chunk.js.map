{"version":3,"sources":["pages/Todos/mock.js","pages/Todos/types.js","pages/Todos/Item.jsx","pages/Todos/List.jsx","pages/Todos/index.jsx","index.js","pages/Todos/index.module.css"],"names":["DEFAULT_DATA","CARD","TodoItem","memo","id","text","complate","active","onMove","onActive","onClose","onCompolate","ref","useRef","useDrag","item","type","collect","monitor","isDragging","connectDrag","useDrop","accept","hover","draggedId","connectDrop","className","classnames","styles","light","style","opacity","itemText","itemActions","button","onClick","displayName","dataByMapping","dataByIds","forEach","str","index","arr","key","generate","card","createdDate","Date","now","length","push","generatorMockData","STORE_LIST_KEY","STORE_MAPPING_KEY","width","margin","Container","useState","todosMapping","setTodosMapping","todosIds","setTodosIds","setText","specifics","requestedFrame","scheduleUpdate","updateSpecifics","current","requestAnimationFrame","payload","nextData","update","undefined","console","log","handleAdd","data","$unshift","$set","handleMove","afterId","currentIdx","findIndex","todoId","afterIdx","$splice","handleActive","$toggle","handleCompolate","info","insertIdx","$push","handleClose","window","confirm","cardIndex","$unset","useEffect","JSON","parse","localStorage","getItem","cancelAnimationFrame","setItem","stringify","textAlign","marginBottom","value","placeholder","marginRight","onInput","e","target","onKeyDown","map","Item","SortableStressTest","shouldRender","setShouldRender","List","App","DndProvider","backend","HTML5Backend","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cb52cc98.chunk.js","sourcesContent":["import { generate } from 'shortid';\n\nconst DEFAULT_DATA = [\n  \"001 - 03708 - 中国近现代史纲要\",\n  \"002 - 03709 - 马克思主义基本原理概论\",\n  \"005 - 02197 - 概率论与数理统计(二)\",\n  \"006 - 02324 - 离散数学\",\n  \"007 - 02331 - 数据结构\",\n  \"008 - 04735 - 数据库系统原理\",\n  \"009 - 02325 - 计算机系统结构\",\n  \"010 - 02326 - 操作系统\",\n  \"011 - 04737 - C++程序设计\",\n  \"012 - 04747 - Java语言程序设计(一)\",\n  \"013 - 02333 - 软件工程\",\n  \"014 - 04741 - 计算机网络原理\",\n  \"015 - 11441 - 计算机及应用课程实验(二)\",\n  \"016 - 10203 - 计算机及应用毕业设计\",\n  \"003 - 00015 - 英语(二)\",\n  \"004 - 00023 - 高等数学(工本)\",\n]\n\nexport function generatorMockData() {\n  const dataByMapping = {};\n  const dataByIds = [];\n\n  DEFAULT_DATA.forEach((str, index, arr) => {\n    const key = generate();\n    const card = {\n      id: key,\n      text: str,\n      complate: false,\n      active: false,\n      createdDate: Date.now(),\n    };\n\n    if (index < 2) {\n      card.active = true;\n    } else if (index >= arr.length - 2) {\n      card.complate = true;\n    }\n\n    dataByMapping[key] = card;\n    dataByIds.push(key);\n  });\n\n  return {\n    dataByIds,\n    dataByMapping\n  }\n}\n\n","export const CARD = 'card';\n","import React, { memo, useMemo, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport classnames from 'classnames';\n\nimport { CARD } from './types';\nimport styles from './index.module.css';\n\nconst TodoItem = memo(\n  ({ id, text, complate, active, onMove, onActive, onClose, onCompolate }) => {\n    const ref = useRef(null);\n    const [{ isDragging }, connectDrag] = useDrag({\n      item: { id, type: CARD },\n      collect: (monitor) => {\n        const result = {\n          isDragging: monitor.isDragging(),\n        };\n        return result;\n      },\n    });\n    const [, connectDrop] = useDrop({\n      accept: CARD,\n      hover({ id: draggedId }) {\n        if (draggedId !== id) {\n          onMove(draggedId, id);\n        }\n      },\n    });\n\n    connectDrag(ref);\n    connectDrop(ref);\n\n    return (\n      <div\n        ref={ref}\n        className={classnames(styles.item, {\n          [styles.light]: active,\n          [styles.complate]: complate,\n        })}\n        style={{ opacity: isDragging ? 0 : 1 }}\n      >\n        <span className={styles.itemText}>{text}</span>\n        <div className={styles.itemActions}>\n          <span className={styles.button} onClick={() => onActive(id)}>\n            {active ? '取消高亮' : '高亮'}\n          </span>\n          <span className={styles.button} onClick={() => onCompolate(id)}>\n            {complate ? '取消完成' : '完成'}\n          </span>\n          <span className={styles.button} onClick={() => onClose(id)}>\n            删除\n          </span>\n        </div>\n      </div>\n    );\n  }\n);\nTodoItem.displayName = 'TodoItem';\n\nexport default TodoItem;\n","import React, { useEffect, useState, memo, useRef } from 'react';\nimport update from 'immutability-helper';\nimport { generate } from 'shortid';\nimport { generatorMockData } from './mock';\n\nimport Item from './Item';\n\nconst { dataByIds, dataByMapping } = generatorMockData();\n\nconst STORE_LIST_KEY = 'TODO_STORE_LIST';\nconst STORE_MAPPING_KEY = 'TODO_STORE_MAPPING';\n\nconst style = {\n  width: 600,\n  margin: 'auto',\n};\nconst Container = memo(() => {\n  const [todosMapping, setTodosMapping] = useState({});\n  const [todosIds, setTodosIds] = useState([]);\n  const [text, setText] = useState('');\n\n  const specifics = useRef();\n  const requestedFrame = useRef();\n\n  /**\n   * 准备触发视图更新\n   */\n  const scheduleUpdate = (updateSpecifics) => {\n    specifics.current = updateSpecifics;\n\n    if (!requestedFrame.current) {\n      requestedFrame.current = requestAnimationFrame(() => {\n        const payload = specifics.current;\n        if (!payload) return;\n\n        if (payload.todosMapping) {\n          const nextData = update(todosMapping, payload.todosMapping);\n          setTodosMapping(nextData);\n        }\n\n        if (payload.todosIds) {\n          const nextData = update(todosIds, payload.todosIds);\n          setTodosIds(nextData);\n        }\n\n        // reset status\n        specifics.current = undefined;\n        requestedFrame.current = undefined;\n\n        console.log('================== drawFrame end ==================');\n      });\n    }\n  };\n\n  /**\n   * 提交数据\n   */\n  const handleAdd = () => {\n    if (!text) return;\n\n    const data = {\n      id: generate(),\n      text,\n      complate: false,\n      active: false,\n      createdDate: Date.now(),\n    };\n\n    scheduleUpdate({\n      todosIds: { $unshift: [data.id] },\n      todosMapping: { [data.id]: { $set: data } },\n    });\n\n    setText('');\n  };\n\n  /**\n   * 处理用户输入的内容\n   */\n  const handleEnter = (e) => {\n    if (e.key !== 'Enter') return;\n\n    handleAdd();\n  };\n\n  /**\n   * 移动 ietm 的顺序\n   * @param {number | string} id\n   * @param {number | string} afterId\n   */\n  const handleMove = (id, afterId) => {\n    const currentIdx = todosIds.findIndex((todoId) => todoId === id);\n    const afterIdx = todosIds.findIndex((todoId) => todoId === afterId);\n\n    scheduleUpdate({\n      todosIds: {\n        $splice: [\n          [currentIdx, 1],\n          [afterIdx, 0, id],\n        ],\n      },\n    });\n  };\n\n  /**\n   * 使触发项处于激活状态\n   */\n  const handleActive = (id) => {\n    scheduleUpdate({\n      todosMapping: {\n        [id]: { $toggle: ['active'] },\n      },\n    });\n  };\n\n  /**\n   * Todo 完成\n   * @desc 完成后将自动将任务推到队尾\n   */\n  const handleCompolate = (id) => {\n    const data = todosMapping[id];\n    console.log('data', data);\n    if (!data) return;\n\n    let info = {\n      todosMapping: {\n        [id]: {\n          $toggle: ['complate'],\n          active: { $set: false },\n        },\n      },\n    };\n\n    const currentIdx = todosIds.findIndex((item) => item === id);\n\n    if (!data.complate) {\n      info.todosIds = {\n        $splice: [[currentIdx, 1]],\n        $push: [id],\n      };\n    } else {\n      let insertIdx = todosIds.findIndex((key) => !todosMapping[key].active);\n      if (insertIdx === -1) insertIdx = 0;\n\n      info.todosIds = {\n        $splice: [\n          [currentIdx, 1],\n          [insertIdx, 0, id],\n        ],\n      };\n    }\n\n    scheduleUpdate(info);\n  };\n\n  const handleClose = (id) => {\n    if (!window.confirm('confrim remove this todo?')) return;\n\n    const cardIndex = todosIds.findIndex((item) => item === id);\n    scheduleUpdate({\n      todosIds: {\n        $splice: [[cardIndex, 1]],\n      },\n      todosMapping: {\n        $unset: [id],\n      },\n    });\n  };\n\n  // 组件初始化完毕\n  useEffect(() => {\n    const todosMapping =\n      JSON.parse(localStorage.getItem(STORE_MAPPING_KEY)) || dataByMapping;\n    const todosIds = JSON.parse(localStorage.getItem(STORE_LIST_KEY)) || dataByIds;\n\n    setTodosMapping(todosMapping);\n    setTodosIds(todosIds);\n\n    return () => requestedFrame && cancelAnimationFrame(requestedFrame);\n  }, []);\n\n  // update store data\n  useEffect(() => localStorage.setItem(STORE_LIST_KEY, JSON.stringify(todosIds)), [\n    todosIds,\n  ]);\n  useEffect(() => {\n    localStorage.setItem(STORE_MAPPING_KEY, JSON.stringify(todosMapping));\n  }, [todosMapping]);\n  // console.log('todosIds and todosMapping', todosIds, todosMapping);\n\n  return (\n    <section>\n      <h2 style={{ textAlign: 'center' }}>React DnD todos</h2>\n      <section style={{ marginBottom: 12, textAlign: 'center' }}>\n        <input\n          type=\"text\"\n          value={text}\n          placeholder=\"input something todo...\"\n          style={{ marginRight: 8 }}\n          onInput={(e) => setText(e.target.value)}\n          onKeyDown={handleEnter}\n        />\n        <button onClick={handleAdd}>Submit</button>\n      </section>\n\n      <section style={style}>\n        {todosIds.map((id) => {\n          const data = todosMapping[id];\n          return data ? (\n            <Item\n              key={data.id}\n              id={data.id}\n              text={data.text}\n              active={data.active}\n              complate={data.complate}\n              onMove={handleMove}\n              onActive={handleActive}\n              onCompolate={handleCompolate}\n              onClose={handleClose}\n            />\n          ) : null;\n        })}\n      </section>\n    </section>\n  );\n});\n\nexport default Container;\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\n\nexport default function SortableStressTest() {\n  // Avoid rendering on server because the big data list is generated\n  const [shouldRender, setShouldRender] = useState(false)\n\n  // Won't fire on server.\n  useEffect(() => setShouldRender(true), [])\n\n  return <>{shouldRender && <List />}</>\n}\n","import { render} from \"react-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nimport Todos from \"./pages/Todos\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DndProvider backend={HTML5Backend}>\n        <Todos />\n      </DndProvider>\n    </div>\n  );\n}\n\nrender(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todos_item__XcDJN\",\"light\":\"Todos_light__3aCHq\",\"itemText\":\"Todos_itemText__3vSUJ\",\"complate\":\"Todos_complate__1gxGn\",\"itemActions\":\"Todos_itemActions__3uP3u\",\"button\":\"Todos_button__24xIk\"};"],"sourceRoot":""}