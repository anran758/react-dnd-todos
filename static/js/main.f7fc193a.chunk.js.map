{"version":3,"sources":["pages/Todos/types.js","pages/Todos/Item.jsx","pages/Todos/List.jsx","pages/Todos/index.jsx","index.js","pages/Todos/index.module.css"],"names":["CARD","TodoItem","memo","id","text","complate","active","onMove","onActive","onClose","onCompolate","ref","useRef","useDrag","item","type","collect","monitor","isDragging","connectDrag","useDrop","accept","hover","draggedId","connectDrop","className","classnames","styles","light","style","opacity","itemText","itemActions","button","onClick","displayName","STORE_LIST_KEY","STORE_MAPPING_KEY","width","margin","Container","useState","todosMapping","setTodosMapping","todosIds","setTodosIds","setText","specifics","requestedFrame","scheduleUpdate","updateSpecifics","current","requestAnimationFrame","payload","console","log","nextData","update","undefined","handleAdd","data","generate","createdDate","Date","now","$unshift","$set","handleMove","afterId","currentIdx","findIndex","todoId","afterIdx","$splice","handleActive","$toggle","handleCompolate","cardIndex","$push","handleClose","window","confirm","$unset","useEffect","JSON","parse","localStorage","getItem","cancelAnimationFrame","setItem","stringify","textAlign","marginBottom","value","placeholder","marginRight","onInput","e","target","onKeyDown","key","map","Item","SortableStressTest","shouldRender","setShouldRender","List","App","DndProvider","backend","HTML5Backend","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f7fc193a.chunk.js","sourcesContent":["export const CARD = 'card';\n","import React, { memo, useMemo, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport classnames from 'classnames';\n\nimport { CARD } from './types';\nimport styles from './index.module.css';\n\nconst TodoItem = memo(\n  ({ id, text, complate, active, onMove, onActive, onClose, onCompolate }) => {\n    const ref = useRef(null);\n    const [{ isDragging }, connectDrag] = useDrag({\n      item: { id, type: CARD },\n      collect: (monitor) => {\n        const result = {\n          isDragging: monitor.isDragging(),\n        };\n        return result;\n      },\n    });\n    const [, connectDrop] = useDrop({\n      accept: CARD,\n      hover({ id: draggedId }) {\n        if (draggedId !== id) {\n          onMove(draggedId, id);\n        }\n      },\n    });\n\n    connectDrag(ref);\n    connectDrop(ref);\n\n    return (\n      <div\n        ref={ref}\n        className={classnames(styles.item, {\n          [styles.light]: active,\n          [styles.complate]: complate,\n        })}\n        style={{ opacity: isDragging ? 0 : 1 }}\n      >\n        <span className={styles.itemText}>{text}</span>\n        <div className={styles.itemActions}>\n          <span className={styles.button} onClick={() => onActive(id)}>\n            {active ? '取消高亮' : '高亮'}\n          </span>\n          <span className={styles.button} onClick={() => onCompolate(id)}>\n            {complate ? '取消完成' : '完成'}\n          </span>\n          <span className={styles.button} onClick={() => onClose(id)}>\n            删除\n          </span>\n        </div>\n      </div>\n    );\n  }\n);\nTodoItem.displayName = 'TodoItem';\n\nexport default TodoItem;\n","import React, { useEffect, useState, memo, useRef, useMemo, useCallback } from 'react';\nimport update from 'immutability-helper';\nimport { generate } from 'shortid';\n\nimport Item from './Item';\n\nconst STORE_LIST_KEY = 'TODO_STORE_LIST';\nconst STORE_MAPPING_KEY = 'TODO_STORE_MAPPING';\n\nconst style = {\n  width: 600,\n  margin: 'auto',\n};\nconst Container = memo(() => {\n  const [todosMapping, setTodosMapping] = useState({});\n  const [todosIds, setTodosIds] = useState([]);\n  const [text, setText] = useState('');\n\n  const specifics = useRef();\n  const requestedFrame = useRef();\n\n  /**\n   * 触发数据更新\n   */\n  // const drawFrame = ;\n\n  /**\n   * 准备触发视图更新\n   */\n  const scheduleUpdate = (updateSpecifics) => {\n    specifics.current = updateSpecifics;\n\n    if (!requestedFrame.current) {\n      requestedFrame.current = requestAnimationFrame(() => {\n        const payload = specifics.current;\n        console.log('drawFrame --> ', payload);\n        if (!payload) return;\n\n        if (payload.todosMapping) {\n          const nextData = update(todosMapping, payload.todosMapping);\n          setTodosMapping(nextData);\n        }\n\n        if (payload.todosIds) {\n          const nextData = update(todosIds, payload.todosIds);\n          setTodosIds(nextData);\n        }\n\n        specifics.current = undefined;\n        requestedFrame.current = undefined;\n        console.log('================== drawFrame end ==================');\n      });\n    }\n  };\n\n  /**\n   * 提交数据\n   */\n  const handleAdd = () => {\n    if (!text) return;\n\n    const data = {\n      id: generate(),\n      text,\n      complate: false,\n      active: false,\n      createdDate: Date.now(),\n    };\n\n    scheduleUpdate({\n      todosIds: { $unshift: [data.id] },\n      todosMapping: { [data.id]: { $set: data } },\n    });\n    setText('');\n  };\n\n  /**\n   * 处理用户输入的内容\n   */\n  const handleEnter = (e) => {\n    if (e.key !== 'Enter') return;\n\n    handleAdd();\n    setText('');\n  };\n\n  /**\n   * 移动 ietm 的顺序\n   * @param {number | string} id\n   * @param {number | string} afterId\n   */\n  const handleMove = (id, afterId) => {\n    const currentIdx = todosIds.findIndex((todoId) => todoId === id);\n    const afterIdx = todosIds.findIndex((todoId) => todoId === afterId);\n\n    scheduleUpdate({\n      todosIds: {\n        $splice: [\n          [currentIdx, 1],\n          [afterIdx, 0, id],\n        ],\n      },\n    });\n  };\n\n  /**\n   * 使触发项处于激活状态\n   */\n  const handleActive = (id) => {\n    scheduleUpdate({\n      todosMapping: {\n        [id]: { $toggle: ['active'] },\n      },\n    });\n  };\n\n  /**\n   * Todo 完成\n   * @desc 完成后将自动将任务推到队尾\n   */\n  const handleCompolate = (id) => {\n    const cardIndex = todosIds.findIndex((item) => item === id);\n\n    scheduleUpdate({\n      todosIds: {\n        $splice: [[cardIndex, 1]],\n        $push: [id],\n      },\n      todosMapping: {\n        [id]: {\n          $toggle: ['complate'],\n          active: { $set: false },\n        },\n      },\n    });\n  };\n\n  const handleClose = (id) => {\n    if (!window.confirm('confrim remove this todo?')) return;\n\n    const cardIndex = todosIds.findIndex((item) => item === id);\n    scheduleUpdate({\n      todosIds: {\n        $splice: [[cardIndex, 1]],\n      },\n      todosMapping: {\n        $unset: [id],\n      },\n    });\n  };\n\n  // 组件初始化完毕\n  useEffect(() => {\n    const todosMapping = JSON.parse(localStorage.getItem(STORE_MAPPING_KEY)) || {};\n    const todosIds = JSON.parse(localStorage.getItem(STORE_LIST_KEY)) || [];\n\n    setTodosMapping(todosMapping);\n    setTodosIds(todosIds);\n\n    return () => requestedFrame && cancelAnimationFrame(requestedFrame);\n  }, []);\n\n  // update store data\n  useEffect(() => localStorage.setItem(STORE_LIST_KEY, JSON.stringify(todosIds)), [\n    todosIds,\n  ]);\n  useEffect(() => {\n    localStorage.setItem(STORE_MAPPING_KEY, JSON.stringify(todosMapping));\n  }, [todosMapping]);\n  console.log('todosIds and todosMapping', todosIds, todosMapping);\n\n  return (\n    <section>\n      <h2 style={{ textAlign: 'center' }}>React DnD todos</h2>\n      <section style={{ marginBottom: 12, textAlign: 'center' }}>\n        <input\n          type=\"text\"\n          value={text}\n          placeholder=\"input something todo...\"\n          style={{ marginRight: 8 }}\n          onInput={(e) => setText(e.target.value)}\n          onKeyDown={handleEnter}\n        />\n        <button onClick={handleAdd}>Submit</button>\n      </section>\n\n      <section style={style}>\n        {todosIds.map((id) => {\n          const data = todosMapping[id];\n          return data ? (\n            <Item\n              key={data.id}\n              id={data.id}\n              text={data.text}\n              active={data.active}\n              complate={data.complate}\n              onMove={handleMove}\n              onActive={handleActive}\n              onCompolate={handleCompolate}\n              onClose={handleClose}\n            />\n          ) : null;\n        })}\n      </section>\n    </section>\n  );\n});\n\nexport default Container;\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\n\nexport default function SortableStressTest() {\n  // Avoid rendering on server because the big data list is generated\n  const [shouldRender, setShouldRender] = useState(false)\n\n  // Won't fire on server.\n  useEffect(() => setShouldRender(true), [])\n\n  return <>{shouldRender && <List />}</>\n}\n","import { render} from \"react-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nimport Todos from \"./pages/Todos\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DndProvider backend={HTML5Backend}>\n        <Todos />\n      </DndProvider>\n    </div>\n  );\n}\n\nrender(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todos_item__XcDJN\",\"light\":\"Todos_light__3aCHq\",\"itemText\":\"Todos_itemText__3vSUJ\",\"complate\":\"Todos_complate__1gxGn\",\"itemActions\":\"Todos_itemActions__3uP3u\",\"button\":\"Todos_button__24xIk\"};"],"sourceRoot":""}